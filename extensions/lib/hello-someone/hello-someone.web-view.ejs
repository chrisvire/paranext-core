<!DOCTYPE html>
<html>
  <head> </head>
  <body>
    <div>Hello Someone!!</div>
    <div>
      <input id="greetings-input" value="Bill" /><button id="greetings-button" type="button">
        Greet
      </button>
    </div>
    <div id="greetings-button-output"></div>
    <div>
      <input
        id="set-greetings-input"
        value="Hey, my name is Bill. I got set by the webview!"
      /><button id="set-greetings-button" type="button">Set Greeting</button>
    </div>
    <div id="all-greetings"></div>
    <div id="any-greetings-update-count">Any Greetings Updates: 0</div>
    <div id="bill-any-greetings-update-count">Any Greetings Updates (via Bill): 0</div>
    <div id="bill-greetings-update-count">Bill Greetings Updates: 0</div>
    <script>
      // Enable webview debugging
      console.debug('Debug Hello Someone WebView');

      function print(input) {
        papi.logger.info(input);
      }

      const dataProviderPromise = papi.dataProvider.get('hello-someone.greetings');

      async function setupWebView() {
        const greetingsDataProvider = await dataProviderPromise;

        // Attach handler for greetings-button
        const greetingsButton = document.getElementById('greetings-button');
        greetingsButton.addEventListener('click', async () => {
          const greetingsInput = document.getElementById('greetings-input');
          const greeting = await greetingsDataProvider.getGreeting(
            greetingsInput.value.toLowerCase(),
          );
          const helloSomeoneOutput = document.getElementById('greetings-button-output');
          helloSomeoneOutput.textContent = papi.util.htmlEncode(greeting);
          print(greeting);
        });
        greetingsButton.addEventListener('contextmenu', async (e) => {
          e.preventDefault();
          const greetingsInput = document.getElementById('greetings-input');
          const name = greetingsInput.value.toLowerCase();
          const promises = new Array(10000);
          for (let i = 0; i < 10000; i += 1) promises[i] = greetingsDataProvider.getGreeting(name);
          await Promise.all(promises);
          print('Done');
        });

        // Attach handler for set-greetings-button
        const setGreetingsButton = document.getElementById('set-greetings-button');
        setGreetingsButton.addEventListener('click', async () => {
          const greetingsInput = document.getElementById('greetings-input');
          const name = greetingsInput.value;
          const setGreetingsInput = document.getElementById('set-greetings-input');
          const success = await greetingsDataProvider.setGreeting(
            name.toLowerCase(),
            setGreetingsInput.value,
          );
          const helloSomeoneOutput = document.getElementById('greetings-button-output');
          helloSomeoneOutput.textContent = papi.util.htmlEncode(
            `${success ? 'Successfully' : 'Unsuccessfully'} set ${name}'s greeting!`.replace(
              /'/g,
              '`',
            ),
          );
        });

        // Update the 'all greetings' display on load and on greetings updates
        greetingsDataProvider.subscribeAll(undefined, (greetings) => {
          const allGreetings = document.getElementById('all-greetings');
          const greetingsString = JSON.stringify(greetings, null, 2);
          allGreetings.textContent = papi.util.htmlEncode(greetingsString.replace(/"/g, '`'));
          print(greetingsString);
        });

        // Update the greetings count on any greeting update
        let anyGreetingsUpdateCount = 0;
        greetingsDataProvider.subscribeAll(
          undefined,
          () => {
            anyGreetingsUpdateCount += 1;
            const anyGreetingsUpdateCountDiv = document.getElementById(
              'any-greetings-update-count',
            );
            anyGreetingsUpdateCountDiv.textContent = papi.util.htmlEncode(
              `Any Greetings Updates: ${anyGreetingsUpdateCount}`,
            );
          },
          { retrieveDataImmediately: false },
        );

        // Update the greetings count on greetings updates
        let billAnyGreetingsUpdateCount = 0;
        greetingsDataProvider.subscribeGreeting(
          'BiLl',
          () => {
            billAnyGreetingsUpdateCount += 1;
            const billAnyGreetingsUpdateCountDiv = document.getElementById(
              'bill-any-greetings-update-count',
            );
            billAnyGreetingsUpdateCountDiv.textContent = papi.util.htmlEncode(
              `Any Greetings Updates (via Bill): ${billAnyGreetingsUpdateCount}`,
            );
          },
          { retrieveDataImmediately: false, whichUpdates: 'all' },
        );

        // Update the greetings count on greetings updates
        let billGreetingsUpdateCount = -1;
        greetingsDataProvider.subscribeGreeting('bIlL', () => {
          billGreetingsUpdateCount += 1;
          const billGreetingsUpdateCountDiv = document.getElementById(
            'bill-greetings-update-count',
          );
          billGreetingsUpdateCountDiv.textContent = papi.util.htmlEncode(
            `Bill Greetings Updates: ${billGreetingsUpdateCount}`,
          );
        });
      }

      if (document.readyState === 'loading')
        document.addEventListener('DOMContentLoaded', setupWebView);
      else setupWebView();

      //# sourceURL=hello-someone-webview.js
    </script>
  </body>
</html>
