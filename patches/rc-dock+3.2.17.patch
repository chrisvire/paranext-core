diff --git a/node_modules/rc-dock/es/Algorithm.d.ts b/node_modules/rc-dock/es/Algorithm.d.ts
index d2d3bd2..f6db041 100644
--- a/node_modules/rc-dock/es/Algorithm.d.ts
+++ b/node_modules/rc-dock/es/Algorithm.d.ts
@@ -16,7 +16,7 @@ export declare enum Filter {
     AnyTabPanel = 123,
     All = 127
 }
-export declare function find(layout: LayoutData, id: string, filter?: Filter): PanelData | TabData | BoxData;
+export declare function find(layout: LayoutData, id: string | ((item: PanelData | TabData | BoxData) => boolean), filter?: Filter): PanelData | TabData | BoxData | undefined;
 export declare function addNextToTab(layout: LayoutData, source: TabData | PanelData, target: TabData, direction: DropDirection): LayoutData;
 export declare function addTabToPanel(layout: LayoutData, source: TabData | PanelData, panel: PanelData, idx?: number): LayoutData;
 export declare function converToPanel(source: TabData | PanelData): PanelData;
diff --git a/node_modules/rc-dock/es/Algorithm.js b/node_modules/rc-dock/es/Algorithm.js
index cd86155..cd0ce1e 100644
--- a/node_modules/rc-dock/es/Algorithm.js
+++ b/node_modules/rc-dock/es/Algorithm.js
@@ -60,13 +60,16 @@ export function nextZIndex(current) {
     }
     return ++_zCount;
 }
+function compareFindId(item, id) {
+    return (typeof id === 'function') ? id(item) : item.id === id;
+}
 function findInPanel(panel, id, filter) {
-    if (panel.id === id && (filter & Filter.Panel)) {
+    if (compareFindId(panel, id) && (filter & Filter.Panel)) {
         return panel;
     }
     if (filter & Filter.Tab) {
         for (let tab of panel.tabs) {
-            if (tab.id === id) {
+            if (compareFindId(tab, id)) {
                 return tab;
             }
         }
@@ -75,7 +78,7 @@ function findInPanel(panel, id, filter) {
 }
 function findInBox(box, id, filter) {
     let result;
-    if ((filter | Filter.Box) && box.id === id) {
+    if ((filter | Filter.Box) && compareFindId(box, id)) {
         return box;
     }
     for (let child of box.children) {
diff --git a/node_modules/rc-dock/es/DockData.d.ts b/node_modules/rc-dock/es/DockData.d.ts
index 58963f1..532c1a9 100644
--- a/node_modules/rc-dock/es/DockData.d.ts
+++ b/node_modules/rc-dock/es/DockData.d.ts
@@ -289,7 +289,7 @@ export interface DockContext {
     /**
      * Find PanelData or TabData by id
      */
-    find(id: string, filter?: Filter): PanelData | TabData | BoxData;
+    find(id: string | ((item: PanelData | TabData | BoxData) => boolean), filter?: Filter): PanelData | TabData | BoxData | undefined;
     /**
      * Update a tab with new TabData
      * @param id tab id to update
diff --git a/node_modules/rc-dock/es/DockLayout.d.ts b/node_modules/rc-dock/es/DockLayout.d.ts
index c1e49ac..2ac82d4 100644
--- a/node_modules/rc-dock/es/DockLayout.d.ts
+++ b/node_modules/rc-dock/es/DockLayout.d.ts
@@ -116,7 +116,7 @@ export declare class DockLayout extends DockPortalManager implements DockContext
         height: number;
     }): void;
     /** @inheritDoc */
-    find(id: string, filter?: Algorithm.Filter): PanelData | TabData | BoxData;
+    find(id: string | ((item: PanelData | TabData | BoxData) => boolean), filter?: Algorithm.Filter): PanelData | TabData | BoxData | undefined;
     /** @ignore */
     getLayoutSize(): {
         width: number;
diff --git a/node_modules/rc-dock/lib/Algorithm.d.ts b/node_modules/rc-dock/lib/Algorithm.d.ts
index d2d3bd2..f6db041 100644
--- a/node_modules/rc-dock/lib/Algorithm.d.ts
+++ b/node_modules/rc-dock/lib/Algorithm.d.ts
@@ -16,7 +16,7 @@ export declare enum Filter {
     AnyTabPanel = 123,
     All = 127
 }
-export declare function find(layout: LayoutData, id: string, filter?: Filter): PanelData | TabData | BoxData;
+export declare function find(layout: LayoutData, id: string | ((item: PanelData | TabData | BoxData) => boolean), filter?: Filter): PanelData | TabData | BoxData | undefined;
 export declare function addNextToTab(layout: LayoutData, source: TabData | PanelData, target: TabData, direction: DropDirection): LayoutData;
 export declare function addTabToPanel(layout: LayoutData, source: TabData | PanelData, panel: PanelData, idx?: number): LayoutData;
 export declare function converToPanel(source: TabData | PanelData): PanelData;
diff --git a/node_modules/rc-dock/lib/Algorithm.js b/node_modules/rc-dock/lib/Algorithm.js
index 833d7d1..280e69c 100644
--- a/node_modules/rc-dock/lib/Algorithm.js
+++ b/node_modules/rc-dock/lib/Algorithm.js
@@ -66,13 +66,16 @@ function nextZIndex(current) {
     return ++_zCount;
 }
 exports.nextZIndex = nextZIndex;
+function compareFindId(item, id) {
+    return (typeof id === 'function') ? id(item) : item.id === id;
+}
 function findInPanel(panel, id, filter) {
-    if (panel.id === id && (filter & Filter.Panel)) {
+    if (compareFindId(panel, id) && (filter & Filter.Panel)) {
         return panel;
     }
     if (filter & Filter.Tab) {
         for (let tab of panel.tabs) {
-            if (tab.id === id) {
+            if (compareFindId(tab, id)) {
                 return tab;
             }
         }
@@ -81,7 +84,7 @@ function findInPanel(panel, id, filter) {
 }
 function findInBox(box, id, filter) {
     let result;
-    if ((filter | Filter.Box) && box.id === id) {
+    if ((filter | Filter.Box) && compareFindId(box, id)) {
         return box;
     }
     for (let child of box.children) {
diff --git a/node_modules/rc-dock/lib/DockData.d.ts b/node_modules/rc-dock/lib/DockData.d.ts
index 58963f1..532c1a9 100644
--- a/node_modules/rc-dock/lib/DockData.d.ts
+++ b/node_modules/rc-dock/lib/DockData.d.ts
@@ -289,7 +289,7 @@ export interface DockContext {
     /**
      * Find PanelData or TabData by id
      */
-    find(id: string, filter?: Filter): PanelData | TabData | BoxData;
+    find(id: string | ((item: PanelData | TabData | BoxData) => boolean), filter?: Filter): PanelData | TabData | BoxData | undefined;
     /**
      * Update a tab with new TabData
      * @param id tab id to update
diff --git a/node_modules/rc-dock/lib/DockLayout.d.ts b/node_modules/rc-dock/lib/DockLayout.d.ts
index c1e49ac..2ac82d4 100644
--- a/node_modules/rc-dock/lib/DockLayout.d.ts
+++ b/node_modules/rc-dock/lib/DockLayout.d.ts
@@ -116,7 +116,7 @@ export declare class DockLayout extends DockPortalManager implements DockContext
         height: number;
     }): void;
     /** @inheritDoc */
-    find(id: string, filter?: Algorithm.Filter): PanelData | TabData | BoxData;
+    find(id: string | ((item: PanelData | TabData | BoxData) => boolean), filter?: Algorithm.Filter): PanelData | TabData | BoxData | undefined;
     /** @ignore */
     getLayoutSize(): {
         width: number;
diff --git a/node_modules/rc-dock/src/Algorithm.ts b/node_modules/rc-dock/src/Algorithm.ts
index 0bf8012..33f3751 100644
--- a/node_modules/rc-dock/src/Algorithm.ts
+++ b/node_modules/rc-dock/src/Algorithm.ts
@@ -79,14 +79,18 @@ export function nextZIndex(current?: number): number {
   return ++_zCount;
 }
 
+function compareFindId(item: PanelData | TabData | BoxData, id: string | ((item: PanelData | TabData | BoxData) => boolean)): boolean {
+  return (typeof id === 'function') ? id(item) : item.id === id;
+}
+
 
-function findInPanel(panel: PanelData, id: string, filter: Filter): PanelData | TabData {
-  if (panel.id === id && (filter & Filter.Panel)) {
+function findInPanel(panel: PanelData, id: string | ((item: PanelData | TabData | BoxData) => boolean), filter: Filter): PanelData | TabData | undefined {
+  if (compareFindId(panel, id) && (filter & Filter.Panel)) {
     return panel;
   }
   if (filter & Filter.Tab) {
     for (let tab of panel.tabs) {
-      if (tab.id === id) {
+      if (compareFindId(tab, id)) {
         return tab;
       }
     }
@@ -94,9 +98,9 @@ function findInPanel(panel: PanelData, id: string, filter: Filter): PanelData |
   return null;
 }
 
-function findInBox(box: BoxData, id: string, filter: Filter): PanelData | TabData | BoxData {
+function findInBox(box: BoxData, id: string | ((item: PanelData | TabData | BoxData) => boolean), filter: Filter): PanelData | TabData | BoxData | undefined {
   let result: PanelData | TabData | BoxData;
-  if ((filter | Filter.Box) && box.id === id) {
+  if ((filter | Filter.Box) && compareFindId(box, id)) {
     return box;
   }
   for (let child of box.children) {
@@ -130,8 +134,8 @@ export enum Filter {
 }
 
 
-export function find(layout: LayoutData, id: string, filter: Filter = Filter.AnyTabPanel): PanelData | TabData | BoxData {
-  let result: PanelData | TabData | BoxData;
+export function find(layout: LayoutData, id: string | ((item: PanelData | TabData | BoxData) => boolean), filter: Filter = Filter.AnyTabPanel): PanelData | TabData | BoxData | undefined {
+  let result: PanelData | TabData | BoxData | undefined;
 
   if (filter & Filter.Docked) {
     result = findInBox(layout.dockbox, id, filter);
diff --git a/node_modules/rc-dock/src/DockData.ts b/node_modules/rc-dock/src/DockData.ts
index 15ed904..c207d6d 100644
--- a/node_modules/rc-dock/src/DockData.ts
+++ b/node_modules/rc-dock/src/DockData.ts
@@ -357,7 +357,7 @@ export interface DockContext {
   /**
    * Find PanelData or TabData by id
    */
-  find(id: string, filter?: Filter): PanelData | TabData | BoxData;
+  find(id: string | ((item: PanelData | TabData | BoxData) => boolean), filter?: Filter): PanelData | TabData | BoxData | undefined;
 
   /**
    * Update a tab with new TabData
diff --git a/node_modules/rc-dock/src/DockLayout.tsx b/node_modules/rc-dock/src/DockLayout.tsx
index 840cf00..0e865c0 100644
--- a/node_modules/rc-dock/src/DockLayout.tsx
+++ b/node_modules/rc-dock/src/DockLayout.tsx
@@ -275,7 +275,7 @@ export class DockLayout extends DockPortalManager implements DockContext {
   }
 
   /** @inheritDoc */
-  find(id: string, filter?: Algorithm.Filter): PanelData | TabData | BoxData {
+  find(id: string | ((item: PanelData | TabData | BoxData) => boolean), filter?: Algorithm.Filter): PanelData | TabData | BoxData | undefined {
     return Algorithm.find(this.getLayout(), id, filter);
   }
 
